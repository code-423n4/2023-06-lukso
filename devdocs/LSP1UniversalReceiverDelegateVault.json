{
  "author": "Fabian Vogelsteller, Yamen Merhi, Jean Cavallera",
  "details": "Delegate contract of the initial universal receiver",
  "errors": {
    "CannotRegisterEOAsAsAssets(address)": [
      {
        "details": "reverts when EOA calls the `universalReceiver(..)` function with an asset/vault typeId",
        "params": {
          "caller": "The address of the EOA"
        }
      }
    ],
    "InvalidLSP5ReceivedAssetsArrayLength(bytes,uint256)": [
      {
        "details": "reverts when the value stored under the 'LSP5ReceivedAssets[]' data key is not valid.      The value stored under this data key should be exactly 16 bytes long.      Only possible valid values are:      - any valid uint128 values          i.e. 0x00000000000000000000000000000000 (zero), empty array, no assets received.          i.e. 0x00000000000000000000000000000005 (non-zero), 5 array elements, 5 assets received.      - 0x (nothing stored under this data key, equivalent to empty array)",
        "params": {
          "invalidValueLength": "the invalid number of bytes stored under the LSP5ReceivedAssets[] data key (MUST be exactly 16 bytes long)",
          "invalidValueStored": "the invalid value stored under the LSP5ReceivedAssets[] data key"
        }
      }
    ],
    "MaxLSP5ReceivedAssetsCountReached(address)": [
      {
        "details": "reverts when the `LSP5ReceivedAssets[]` array reaches its maximum limit (max(uint128))",
        "params": {
          "notRegisteredAsset": "the address of the asset that could not be registered"
        }
      }
    ],
    "NativeTokensNotAccepted()": [
      {
        "details": "reverts when `universalReceiver(...)` is called with a value different than 0"
      }
    ],
    "ReceivedAssetsIndexSuperiorToUint128(uint256)": [
      {
        "details": "reverts when the received assets index is superior to uint128",
        "params": {
          "index": "the received assets index"
        }
      }
    ]
  },
  "kind": "dev",
  "methods": {
    "supportsInterface(bytes4)": {
      "details": "See {IERC165-supportsInterface}."
    },
    "universalReceiver(bytes32,bytes)": {
      "details": "allows to register arrayKeys and Map of incoming assets and remove after being sent",
      "params": {
        "data": "The arbitrary data received with the call",
        "typeId": "The hash of a specific standard or a hook"
      },
      "returns": {
        "result": "The return value"
      }
    }
  },
  "title": "Core Implementation of contract writing the received LSP7 and LSP8 assets into your Vault using        the LSP5-ReceivedAsset standard and removing the sent assets.",
  "version": 1
}