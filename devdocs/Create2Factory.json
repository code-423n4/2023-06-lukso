{
  "kind": "dev",
  "methods": {
    "computeAddress(bytes32,bytes32)": {
      "details": "Returns the address where a contract will be stored if deployed via {deploy}. Any change in the `bytecodeHash` or `salt` will result in a new destination address."
    },
    "computeAddress(bytes32,bytes32,address)": {
      "details": "Returns the address where a contract will be stored if deployed via {deploy} from a contract located at `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
    },
    "deploy(bytes32,bytes)": {
      "details": "Deploys a contract using `CREATE2`. The address where the contract will be deployed can be known in advance via {computeAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already."
    }
  },
  "title": "contract to deploy contracts with precomputed addresses, using create2 opcode based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Create2.sol DO NOT TOUCH",
  "version": 1
}